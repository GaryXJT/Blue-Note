@import "@/styles/variables.scss";

.waterfall {
  position: relative;
  width: 100%;
  min-height: 400px;
  transition: min-height 0.8s cubic-bezier(0.4, 0, 0.2, 1),
    opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: min-height;
  transform: translateZ(0); /* 启用GPU加速 */
  overflow: hidden; /* 防止内容溢出 */
}

.error {
  text-align: center;
  padding: 12px;
  color: #ff4d4f;
  background-color: var(--card-background);
  border: 1px solid #ffccc7;
  border-radius: 4px;
  margin-bottom: 12px;

  [data-theme="dark"] & {
    color: #ff7875;
    border-color: rgba(255, 120, 117, 0.3);
    background-color: rgba(255, 77, 79, 0.1);
  }
}

.container {
  position: relative;
  min-height: 600px;
}

.content {
  display: flex;
  gap: var(--gap);
  justify-content: center;
  padding: 0 12px;
  width: 100%;
  margin: 0 auto;
  transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1),
    transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  min-height: 400px;
  transform: translateZ(0); /* 启用GPU加速 */
  will-change: transform, opacity;
  backface-visibility: hidden;
  animation: fadeIn 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* 添加初始渲染的平滑过渡效果 */
.initialRender {
  opacity: 0;
}

.filtering {
  opacity: 0.6;
  pointer-events: none;
  transform: translateY(5px);
  transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1),
    transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

.column {
  flex: 0 0 var(--column-width);
  width: var(--column-width);
  margin-bottom: var(--gap);
  display: flex;
  flex-direction: column;
  transform: translateZ(0); /* 启用GPU加速 */
  will-change: transform;
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1),
    opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 1;
}

.column > div {
  margin-bottom: var(--gap);
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1),
    opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform, opacity;
  backface-visibility: hidden;
  transform: translateZ(0); /* 启用GPU加速 */
  animation: fadeInCard 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  animation-fill-mode: backwards;
}

/* 给每一行的卡片添加递增的动画延迟 */
.column > div:nth-child(1) {
  animation-delay: 0.05s;
}
.column > div:nth-child(2) {
  animation-delay: 0.1s;
}
.column > div:nth-child(3) {
  animation-delay: 0.15s;
}
.column > div:nth-child(4) {
  animation-delay: 0.2s;
}
.column > div:nth-child(5) {
  animation-delay: 0.25s;
}

@keyframes fadeInCard {
  from {
    opacity: 0;
    transform: translateY(15px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.skeletonContent {
  display: flex;
  width: 100%;
  margin: 0 auto;
  gap: var(--gap);
  justify-content: center;
  min-height: 600px;
  padding: 0 12px;
  animation: fadeIn 0.8s ease-in-out;

  .column {
    flex: 0 0 var(--column-width);
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    width: var(--column-width);
    min-height: 600px;
  }
}

.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 32px 0;
  color: var(--primary-color);
  height: 60px;

  .spinner {
    width: 24px;
    height: 24px;
    border: 2px solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    margin-right: 8px;

    [data-theme="dark"] & {
      border-width: 3px;
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(300%);
  }
}

// 深色模式下瀑布流额外样式
[data-theme="dark"] {
  .waterfall {
    background-color: var(--background-color);
  }
}

@media (max-width: 768px) {
  .waterfall {
    padding: 0;
  }

  .content,
  .skeletonContent {
    gap: 16px;
  }
}

@media (max-width: 576px) {
  .waterfall {
    padding: 0 8px;
  }

  .content,
  .skeletonContent {
    gap: 8px;
  }

  .skeletonContainer {
    grid-template-columns: repeat(1, 1fr);
    & > * {
      width: 100%;
    }
  }
}

// 添加空状态样式
.emptyState {
  width: 100%;
  text-align: center;
  padding: 60px 0;
  color: #999;

  p {
    margin: 8px 0;
    font-size: 16px;
  }
}
